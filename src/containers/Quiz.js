import React, {Component} from "react";
import classes from './Quiz.module.css'
import ActiveQuiz from "../components/ActiveQuiz/ActiveQuiz";
import FinalScreen from "../hoc/FinalScreen/FinalScreen";

class Quiz extends Component {

    state = {
        activeQuestion: 0,
        correctAnswers: 0,
        isFinished: false,
        quiz: [
            {
                question: 'üßäüßäüö¢üíî',
                rightAnswerId: 4,
                id: 1,
                answers: [
                    {text: '–•–æ–ª–æ–¥–Ω–æ–µ —Å–µ—Ä–¥—Ü–µ', id: 1},
                    {text: '–ì–ª—É–±–æ–∫–æ–µ —Å–∏–Ω–µ–µ –º–æ—Ä–µ', id: 2},
                    {text: '–ö–æ—Ä–∞–±–ª–µ–∫—Ä—É—à–µ–Ω–∏–µ', id: 3},
                    {text: '–¢–∏—Ç–∞–Ω–∏–∫', id: 4},
                ]
            },
            {
                question: 'üë®‚Äçü¶±ü¶∏‚Äç‚ôÇÔ∏èüî¥üü°üí∞',
                rightAnswerId: 2,
                id: 2,
                answers: [
                    {text: '–ú—Å—Ç–∏—Ç–µ–ª–∏', id: 1},
                    {text: '–ñ–µ–ª–µ–∑–Ω—ã–π —á–µ–ª–æ–≤–µ–∫', id: 2},
                    {text: '–ß–µ–ª–æ–≤–µ–∫-–ø–∞—É–∫', id: 3},
                    {text: '–ë—ç—Ç–º–µ–Ω', id: 4},
                ]
            },
            {
                question: 'üï∂Ô∏èüï∂Ô∏èüíäüíäüíª',
                rightAnswerId: 4,
                id: 3,
                answers: [
                    {text: '–¢–µ—Ä–º–∏–Ω–∞—Ç–æ—Ä', id: 1},
                    {text: '–ù–∞—á–∞–ª–æ', id: 2},
                    {text: '–•–∞–∫–µ—Ä', id: 3},
                    {text: '–ú–∞—Ç—Ä–∏—Ü–∞', id: 4},
                ]
            },
            {
                question: 'ü¶ñü¶ïüèûÔ∏è‚ö†Ô∏è',
                rightAnswerId: 1,
                id: 4,
                answers: [
                    {text: '–ü–∞—Ä–∫ –Æ—Ä—Å–∫–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞', id: 1},
                    {text: '–ì–æ–¥–∑–∏–ª–ª–∞', id: 2},
                    {text: '–ö–∏–Ω–≥ –ö–æ–Ω–≥', id: 3},
                    {text: '–ú–∏—Ä –∂–∏–≤–æ—Ç–Ω—ã—Ö', id: 4},
                ]
            },
            {
                question: 'üêüüê†üö§üèä‚Äç‚ôÇÔ∏è',
                rightAnswerId: 4,
                id: 5,
                answers: [
                    {text: '–í –ø–æ–∏—Å–∫–∞—Ö –ù–µ–º–æ', id: 1},
                    {text: '–ê–∫—É–ª—ã', id: 2},
                    {text: '–í –ø–æ–∏—Å–∫–∞—Ö –î–æ—Ä–∏', id: 3},
                    {text: '–ß–µ–ª—é—Å—Ç–∏', id: 4},
                ]
            },
            {
                question: 'üßô‚Äç‚ôÇÔ∏èüíçüî•üèîÔ∏è',
                rightAnswerId: 3,
                id: 6,
                answers: [
                    {text: '–ì–∞—Ä—Ä–∏ –ü–æ—Ç—Ç–µ—Ä', id: 1},
                    {text: '–•–æ–±–±–∏—Ç', id: 2},
                    {text: '–í–ª–∞—Å—Ç–µ–ª–∏–Ω –∫–æ–ª–µ—Ü', id: 3},
                    {text: '–ü—Ä–∏–Ω—Ü –ö–∞—Å–ø–∏–∞–Ω', id: 4},
                ]
            },
            {
                question: 'üöóüöóüí®üí•üèéÔ∏è',
                rightAnswerId: 2,
                id: 7,
                answers: [
                    {text: '–¢–∞–∫—Å–∏', id: 1},
                    {text: '–§–æ—Ä—Å–∞–∂', id: 2},
                    {text: '–î—Ä–∞–π–≤', id: 3},
                    {text: '–£–≥–Ω–∞—Ç—å –∑–∞ 60 —Å–µ–∫—É–Ω–¥', id: 4},
                ]
            },
            {
                question: 'üêºü•ãüêâ',
                rightAnswerId: 4,
                id: 8,
                answers: [
                    {text: '–ü–∞–Ω–¥–∞', id: 1},
                    {text: '–ö—É–Ω–≥-—Ñ—É –ë–æ–π', id: 2},
                    {text: '–î—Ä–∞–∫–æ–Ω –∏ –ü–∞–Ω–¥–∞', id: 3},
                    {text: '–ö—É–Ω–≥-—Ñ—É –ü–∞–Ω–¥–∞', id: 4},
                ]
            },
            {
                question: 'üë¥üë¶üë®‚ÄçüöÄüåï',
                rightAnswerId: 2,
                id: 9,
                answers: [
                    {text: '–ö–æ—Å–º–æ—Å', id: 1},
                    {text: '–ò–Ω—Ç–µ—Ä—Å—Ç–µ–ª–ª–∞—Ä', id: 2},
                    {text: '–ì—Ä–∞–≤–∏—Ç–∞—Ü–∏—è', id: 3},
                    {text: '–ê—Ä–º–∞–≥–µ–¥–¥–æ–Ω', id: 4},
                ]
            },
            {
                question: 'üé©üê∞‚ú®',
                rightAnswerId: 4,
                id: 10,
                answers: [
                    {text: '–ì–∞—Ä—Ä–∏ –ü–æ—Ç—Ç–µ—Ä', id: 1},
                    {text: '–ò–ª–ª—é–∑–∏–æ–Ω–∏—Å—Ç', id: 2},
                    {text: '–§–æ–∫—É—Å–Ω–∏–∫', id: 3},
                    {text: '–ò–ª–ª—é–∑–∏—è –æ–±–º–∞–Ω–∞', id: 4},
                ]
            }
        ],
        answerState: null
    }

    onAnswerClickHandler = (answerId) => {
        if (this.state.answerState) {
                return
            
        }

        const question = this.state.quiz[this.state.activeQuestion]

        if (question.rightAnswerId === answerId) {
            this.setState({
                answerState: {[answerId]: 'success'},
                correctAnswers: this.state.correctAnswers + 1
            })
        } else {
            this.setState({
                answerState: {[answerId]: 'error'}
            })
        }

        const timeout = window.setTimeout(() => {
            if (this.isQuizFinished()) {
                this.setState({isFinished: true})
            } else {
                this.setState({
                    activeQuestion: this.state.activeQuestion + 1,
                    answerState: null
                })
            }
            window.clearTimeout(timeout)
        }, 1000)
    }

    isQuizFinished() {
        return this.state.activeQuestion + 1 === this.state.quiz.length
    }

    render() {
        if (this.state.isFinished) {
            return <FinalScreen correctAnswers={this.state.correctAnswers} />
        }
        return (
            <div className={classes.Quiz}>
                <div className={classes.QuizWrapper}>
                    <h1>–ß—Ç–æ –∑–∞ —Ñ–∏–ª—å–º —Ç—É—Ç –∑–∞–≥–∞–¥–∞–Ω?</h1>
                    <ActiveQuiz answers={this.state.quiz[this.state.activeQuestion].answers} 
                                question={this.state.quiz[this.state.activeQuestion].question}
                                onAnswerClick={this.onAnswerClickHandler}
                                quizLength={this.state.quiz.length}
                                answerNumber={this.state.activeQuestion + 1}
                                state={this.state.answerState} />
                </div>
            </div>
        )
    }
}

export default Quiz